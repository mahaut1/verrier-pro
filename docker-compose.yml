version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: verrierpro_postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
      POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-from-env.sh:/docker-entrypoint-initdb.d/10-init-from-env.sh:ro
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
      - ./pg_hba.conf:/etc/postgresql/pg_hba.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: >
      postgres
      -c config_file=/etc/postgresql/postgresql.conf
      -c log_statement=all
      -c log_destination=stderr
      -c listen_addresses='*'
      -c max_connections=100

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: verrierpro_pgadmin
    env_file:
      - .env
    ports:
      - "8080:80"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    profiles:
      - admin

  adminer:
    image: adminer:latest
    container_name: verrierpro_adminer
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8081:8080"
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  default:
    name: verrierpro_network
